df <- data.frame(p, pilnpi)
ggplot() + geom_point(df, aes(p, pilnpi))
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
pilnpi <- -p*log(p, base=2)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
pilnpi <- -p*log(p, base=10)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
pilnpi <- -p*log(p, base=10) / log(10, base=10)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 100
pilnpi <- -p*log(p, base=n) / log(n, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 1000
pilnpi <- -p*log(p, base=n) / log(n, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 10000000
pilnpi <- -p*log(p, base=n) / log(n, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
plot(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
plot(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
plot(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 2
pilnpi <- -p*log(p, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 10
pilnpi <- -p*log(p, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 100
pilnpi <- -p*log(p, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 100000
pilnpi <- -p*log(p, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 100000
pilnpi <- -p*log(p, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
plot(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 10000000
pilnpi <- -p*log(p, base=n)
p <- seq(.01, 1, .001)
n <- 10000000
pilnpi <- -p*log(p, base=n)
df <- data.frame(p, pilnpi)
ggplot() + geom_point(data=df, aes(x=p,y=pilnpi))
p <- seq(.01, 1, .001)
n <- 1000000000
pilnpi <- -p*log(p, base=n)
library(MASS)
library(lmtest)
library(AER)
library(ggplot2)
library(reshape2)
require(foreign)
setwd("D:/univ/2014-2015/thesis/KERMIT/results february")
bacteria <- read.csv("design_results_febr_counts.csv")
pathogen <- bacteria$LMG7866
evenness <- bacteria$evenness
cellcount <- log10(bacteria$cellcount)
df <- data.frame(pathogen, evenness, cellcount)
# define loes function
lo <- function(x, y){
lo <- loess(y~x)
return(predict(lo, type="response")[order(x)])
}
test_df <- data.frame(LMG7866=bacteria$LMG7866, LMG3203=bacteria$LMG3203, LMG2954=bacteria$LMG2954,
LMG7878=bacteria$LMG7878, evenness=bacteria$evenness, cellcount=bacteria$cellcount)
test_df <- melt(test_df, id.vars=c("evenness", "cellcount"))
ggplot(test_df, aes(evenness, value, fill=variable)) + geom_point() +
facet_grid(variable~.)
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency")
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 18))
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 20))
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 30))
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40))
library(texreg)
library(ggplot2)
library(gridExtra)
setwd("D:/univ/2014-2015/thesis/KERMIT/results february")
bacteria <- read.csv("design_results_febr_counts.csv")
bacteria$LMG7866 <- ifelse(bacteria$LMG7866 > 30, 30, bacteria$LMG7866)
bacteria$LMG3203 <- ifelse(bacteria$LMG3203 > 30, 30, bacteria$LMG3203)
bacteria$LMG2954 <- ifelse(bacteria$LMG2954 > 30, 30, bacteria$LMG2954)
bacteria$LMG7878 <- ifelse(bacteria$LMG7878 > 30, 30, bacteria$LMG7878)
head(bacteria)
names(bacteria)
plot(log10(cellcount)~evenness, bacteria, pch = 20)
LMG7866 <- glm(LMG7866~ evenness+log10(cellcount)+evenness:log10(cellcount), data = bacteria, family = poisson())
LMG2954 <- glm(LMG2954~ evenness+log10(cellcount)+evenness:log10(cellcount), data = bacteria, family = poisson())
LMG3203 <- glm(LMG3203~ evenness+log10(cellcount)+evenness:log10(cellcount), data = bacteria, family = poisson())
LMG7878 <- glm(LMG7878~ evenness+log10(cellcount)+evenness:log10(cellcount), data = bacteria, family = poisson())
# m1 <- extract.glm(model1)
# e
texreg(list(LMG7866, LMG2954, LMG3203, LMG7878), dcolumn = F, booktabs = T, use.packages = FALSE,
label = "tab:3", caption = "Two linear models.", float.pos = "h",
custom.model.names = c("LMG7866", "LMG2954", "LMG3203", "LMG7878"), scalebox = .5,
bold = 0.05, caption.above = T)
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40))
setwd("D:/univ/2014-2015/thesis/KERMIT/results february")
bacteria <- read.csv("design_results_febr_counts.csv")
pathogen <- bacteria$LMG7866
evenness <- bacteria$evenness
cellcount <- log10(bacteria$cellcount)
df <- data.frame(pathogen, evenness, cellcount)
# define loes function
lo <- function(x, y){
lo <- loess(y~x)
return(predict(lo, type="response")[order(x)])
}
test_df <- data.frame(LMG7866=bacteria$LMG7866, LMG3203=bacteria$LMG3203, LMG2954=bacteria$LMG2954,
LMG7878=bacteria$LMG7878, evenness=bacteria$evenness, cellcount=bacteria$cellcount)
test_df <- melt(test_df, id.vars=c("evenness", "cellcount"))
ggplot(test_df, aes(evenness, value, fill=variable)) + geom_point() +
facet_grid(variable~.)
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40))
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40))
test_df <- melt(test_df, id.vars=c("evenness", "cellcount"))
test_df <- data.frame(LMG7866=bacteria$LMG7866, LMG3203=bacteria$LMG3203, LMG2954=bacteria$LMG2954,
LMG7878=bacteria$LMG7878, evenness=bacteria$evenness, cellcount=bacteria$cellcount)
test_df <- melt(test_df, id.vars=c("evenness", "cellcount"))
ggplot(test_df, aes(evenness, value, fill=variable)) + geom_point() +
facet_grid(variable~.)
setwd("D:/univ/2014-2015/thesis/thesis-writings/results-statistics-february")
test_df <- data.frame(LMG7866=bacteria$LMG7866, LMG3203=bacteria$LMG3203, LMG2954=bacteria$LMG2954,
LMG7878=bacteria$LMG7878, evenness=bacteria$evenness, cellcount=bacteria$cellcount)
test_df <- melt(test_df, id.vars=c("evenness", "cellcount"))
#ggplot(test_df, aes(evenness, value, fill=variable)) + geom_point() +
# facet_grid(variable~.)
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40))
df
test_df <- melt(test_df, id.vars=c("evenness", "LMG7866"))
test_df <- data.frame(LMG7866=bacteria$LMG7866, LMG3203=bacteria$LMG3203, LMG2954=bacteria$LMG2954,
LMG7878=bacteria$LMG7878, evenness=bacteria$evenness, cellcount=bacteria$cellcount)
test_df <- melt(test_df, id.vars=c("evenness", "LMG7866"))
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1 + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40))
df
ggplot(df, aes(x=pathogen)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40))
test_df <- data.frame(LMG7866=bacteria$LMG7866, LMG3203=bacteria$LMG3203, LMG2954=bacteria$LMG2954,
LMG7878=bacteria$LMG7878, evenness=bacteria$evenness, cellcount=bacteria$cellcount)
test_df <- data.frame(LMG7866=bacteria$LMG7866, LMG3203=bacteria$LMG3203, LMG2954=bacteria$LMG2954,
LMG7878=bacteria$LMG7878, evenness=bacteria$evenness, cellcount=bacteria$cellcount)
test_df <- melt(test_df, id.vars=c("evenness", "cellcount"))
LMG7866 <- bacteria$LMG7866
LMG7878 <- bacteria$LMG7878
LMG3203 <- bacteria$LMG3203
LMG2954 <- bacteria$LMG2954
evenness <- bacteria$evenness
cellcount <- log10(bacteria$cellcount)
LMG7866 <- bacteria$LMG7866
LMG7878 <- bacteria$LMG7878
LMG3203 <- bacteria$LMG3203
LMG2954 <- bacteria$LMG2954
evenness <- bacteria$evenness
cellcount <- log10(bacteria$cellcount)
df <- data.frame(evenness, cellcount, LMG7866, LMG7878, LMG3203, LMG2954)
# define loes function
lo <- function(x, y){
lo <- loess(y~x)
return(predict(lo, type="response")[order(x)])
}
ggplot(df, aes(x=LMG7866)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40))
df2 <- melt(df, id.vars=c("evenness"))
df2 <- melt(df, id.vars=c("evenness", "cellcount"))
df2
head(df2)
ggplot(test_df, aes(evenness, value, fill=variable)) + geom_hist() +
facet_grid(variable~.)
ggplot(test_df, aes(evenness, value, fill=variable)) + geom_histogram() +
facet_grid(variable~.)
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram() +
facet_grid(variable~.)
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram() +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram() +
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram() +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram() +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=20) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=5) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=2) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=2.5) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram() +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.5) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency")
ggplot(df, aes(x=LMG7866)) + geom_histogram(binwidth=1) + xlab("Pathogen count") + ylab("Frequency") +
theme_set(theme_grey(base_size = 40)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = -1))
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1))
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 2))
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1.25))
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1.5))
library(MASS)
library(lmtest)
library(AER)
library(ggplot2)
library(reshape2)
require(foreign)
setwd("D:/univ/2014-2015/thesis/KERMIT/results february")
bacteria <- read.csv("design_results_febr_counts.csv")
LMG7866 <- bacteria$LMG7866
LMG7878 <- bacteria$LMG7878
LMG3203 <- bacteria$LMG3203
LMG2954 <- bacteria$LMG2954
evenness <- bacteria$evenness
cellcount <- log10(bacteria$cellcount)
df <- data.frame(evenness, cellcount, LMG7866, LMG7878, LMG3203, LMG2954)
# define loes function
lo <- function(x, y){
lo <- loess(y~x)
return(predict(lo, type="response")[order(x)])
}
df2 <- melt(df, id.vars=c("evenness", "cellcount"))
head(df2)
ggplot(test_df, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1.5))
ggplot(df2, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1.5))
knit("results-statistics-february-appendix.Rnw")
setwd("~/univ/2014-2015/thesis/thesis/results-statistics-february")
setwd("D:/univ/2014-2015/thesis/thesis-writings/results-statistics-february")
setwd("D:/univ/2014-2015/thesis/thesis-writings/results-statistics-february")
library(knitr)
knit("results-statistics-february-appendix.Rnw")
knit("results-statistics-february-appendix.Rnw")
ggplot(df2, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1.5)) +
theme_set(theme_grey(base_size = 30))
ggplot(df2, aes(x=value, fill=variable)) + geom_histogram(binwidth=1.25) +
facet_grid(variable~.) + xlab("Pathogen count") + ylab("Frequency") +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1.5)) +
theme_set(theme_grey(base_size = 20))
dispersiontest(model1) # overdispersed...
model1 <- glm(LMG7866~ evenness+log10(cellcount), data = bacteria, family = poisson())
model2 <- glm(LMG2954~ evenness+log10(cellcount), data = bacteria, family = poisson())
model3 <- glm(LMG3203~ evenness+log10(cellcount), data = bacteria, family = poisson())
dispersiontest(model1) # overdispersed...
dispersiontest(model2) # overdispersed...
dispersiontest(model3) # overdispersed...
model1 <- glm(LMG7866~ evenness+log10(cellcount), data = bacteria, family = poisson())
model2 <- glm(LMG2954~ evenness+log10(cellcount), data = bacteria, family = poisson())
model3 <- glm(LMG3203~ evenness+log10(cellcount), data = bacteria, family = poisson())
dispersiontest(model2) # overdispersed...
dispersiontest(model1) # overdispersed...
dispersiontest(model2) # overdispersed...
dispersiontest(model3) # overdispersed...
cite(AER, natBIB )
library(AER)
citation(AER)
dispersiontest(model3) # overdispersed...
model1 <- glm.nb(LMG7866~ evenness+log10(cellcount), data = bacteria)
model1 <- glm.nb(LMG7866~ evenness+log10(cellcount)+evenness:log10(cellcount), data = bacteria)
model2 <- glm.nb(LMG2954~ evenness+log10(cellcount)+evenness:log10(cellcount), data = bacteria)
model3 <- glm.nb(LMG3203~ evenness+log10(cellcount)+evenness:log10(cellcount), data = bacteria)
summary(model1)
summary(model2)
summary(model3)
model1 <- glm.nb(LMG7866~ evenness+log10(cellcount), data = bacteria)
model2 <- glm.nb(LMG2954~ evenness+log10(cellcount), data = bacteria)
model3 <- glm.nb(LMG3203~ evenness+log10(cellcount), data = bacteria)
summary(model1)
summary(model2)
summary(model3)
summary(model1)
summary(model2)
summary(model3)
library(regex)
summary(model1)
summary(model2)
summary(model3)
texreg(list(model1, model2, model3), dcolumn = F, booktabs = T, use.packages = FALSE, label = "tab:3", caption = "Two linear models.",
float.pos = "h", custom.model.names = c("LMG7866", "LMG2954", "LMG3203"),
scalebox = .7, caption.above = T)
summary(model1)
summary(model1)
summary(model2)
summary(model3)
summary(model2)
summary(model1)
library(texreg)
library(ggplot2)
library(gridExtra)
install.packages("sqldf")
install.packages("forecast")
library(MASS)
residuals_unity <- calc_residuals(bacteria, q_unity)
residuals_CCA <- calc_residuals(bacteria, q_CCA)
residuals_jacard_compounds <- calc_residuals(bacteria, q_jacard_compounds)
residuals_jacard_reactions <- calc_residuals(bacteria, q_jacard_reactions)
residuals_jacard_location <- calc_residuals(bacteria, q_jacard_location)
residuals <- data.frame(q=1:499/100, residuals_CCA, residuals_jacard_compounds, residuals_jacard_location, residuals_jacard_reactions,
residuals_unity, residuals_poisson=rep(260.2412, 499))
library(plyr)
library(ggplot2)
library(reshape2)
resid_melt <- melt(residuals, id.vars = 'q')
ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals")
calc_residuals <- function(bacteria, similarity_matrix)
{
residuals <- rep(NA, dim(similarity_matrix)[2])
for (i in 1:dim(similarity_matrix)[2])
{
model1 <- glm(bacteria$LMG7866~ similarity_matrix[,i]+log10(bacteria$cellcount), family = poisson())
residuals[i] <- sum(abs(model1$residuals))
}
return(residuals)
}
residuals_unity <- calc_residuals(bacteria, q_unity)
residuals_CCA <- calc_residuals(bacteria, q_CCA)
residuals_jacard_compounds <- calc_residuals(bacteria, q_jacard_compounds)
residuals_jacard_reactions <- calc_residuals(bacteria, q_jacard_reactions)
residuals_jacard_location <- calc_residuals(bacteria, q_jacard_location)
residuals <- data.frame(q=1:499/100, residuals_CCA, residuals_jacard_compounds, residuals_jacard_location, residuals_jacard_reactions,
residuals_unity, residuals_poisson=rep(260.2412, 499))
library(plyr)
model1 <- glm.nb(LMG7866~ evenness+log10(cellcount), data = bacteria)
model1 <- glm.nb(LMG7866~ evenness+log10(cellcount), data = bacteria)
residuals_nb <- sum(abs(model1$residuals))
calc_residuals <- function(bacteria, similarity_matrix)
{
residuals <- rep(NA, dim(similarity_matrix)[2])
for (i in 1:dim(similarity_matrix)[2])
{
model1 <- glm(bacteria$LMG7866~ similarity_matrix[,i]+log10(bacteria$cellcount), family = poisson())
residuals[i] <- sum(abs(model1$residuals))
}
return(residuals)
}
residuals_unity <- calc_residuals(bacteria, q_unity)
q_CCA <- read.table("q_CCA.csv", header=T, sep=",")
q_jacard_compounds <- read.table("q_jacard_compounds.csv", header=T, sep=",")
q_jacard_reactions <- read.table("q_jacard_reactions.csv", header=T, sep=",")
q_jacard_location <- read.table("q_jacard_location.csv", header=T, sep=",")
q_unity <- read.table("q_unity.csv", header=T, sep=",")
setwd("D:/univ/2014-2015/thesis/KERMIT/bacterial similarity/data mining/q-indices")
q_CCA <- read.table("q_CCA.csv", header=T, sep=",")
q_jacard_compounds <- read.table("q_jacard_compounds.csv", header=T, sep=",")
q_jacard_reactions <- read.table("q_jacard_reactions.csv", header=T, sep=",")
q_jacard_location <- read.table("q_jacard_location.csv", header=T, sep=",")
q_unity <- read.table("q_unity.csv", header=T, sep=",")
setwd("D:/univ/2014-2015/thesis/KERMIT/bacterial similarity/data mining/q-indices")
bacteria <- read.csv("D:/univ/2014-2015/thesis/KERMIT/results february/design_results_febr_counts.csv")
bacteria$LMG7866 <- ifelse(bacteria$LMG7866 > 30, 30, bacteria$LMG7866)
bacteria$LMG3203 <- ifelse(bacteria$LMG3203 > 30, 30, bacteria$LMG3203)
bacteria$LMG2954 <- ifelse(bacteria$LMG2954 > 30, 30, bacteria$LMG2954)
bacteria$LMG7878 <- ifelse(bacteria$LMG7878 > 30, 30, bacteria$LMG7878)
head(bacteria)
names(bacteria)
model1 <- glm.nb(LMG7866~ evenness+log10(cellcount), data = bacteria)
residuals_nb <- sum(abs(model1$residuals))
residuals_unity <- calc_residuals(bacteria, q_unity)
residuals_CCA <- calc_residuals(bacteria, q_CCA)
residuals_jacard_compounds <- calc_residuals(bacteria, q_jacard_compounds)
residuals_jacard_reactions <- calc_residuals(bacteria, q_jacard_reactions)
residuals_jacard_location <- calc_residuals(bacteria, q_jacard_location)
residuals <- data.frame(q=1:499/100, residuals_CCA, residuals_jacard_compounds, residuals_jacard_location, residuals_jacard_reactions,
residuals_unity, residuals_neg_bin=rep(261, 499))
library(plyr)
library(ggplot2)
library(reshape2)
resid_melt <- melt(residuals, id.vars = 'q')
ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals")
identity_matrix <- calc_residuals(bacteria, q_unity)
CCA <- calc_residuals(bacteria, q_CCA)
jacard_compounds <- calc_residuals(bacteria, q_jacard_compounds)
jacard_reactions <- calc_residuals(bacteria, q_jacard_reactions)
jacard_location <- calc_residuals(bacteria, q_jacard_location)
residuals <- data.frame(q=1:499/100, CCA, jacard_compounds, jacard_location,
jacard_reactions, identity_matrix, neg_bin=rep(261, 499))
library(reshape2)
resid_melt <- melt(residuals, id.vars = 'q')
ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals")
residuals <- data.frame(q=1:499/100, CCA, jacard_compounds, jacard_location,
jacard_reactions, identity_matrix, Negative binomial regression=rep(261, 499))
library(plyr)
residuals <- data.frame(q=1:499/100, CCA, jacard_compounds, jacard_location,
jacard_reactions, identity_matrix, Negative_binomial regression=rep(261, 499))
residuals <- data.frame(q=1:499/100, CCA, jacard_compounds, jacard_location,
jacard_reactions, identity_matrix, Neg.bin.regression=rep(261, 499))
library(plyr)
library(ggplot2)
library(reshape2)
resid_melt <- melt(residuals, id.vars = 'q')
ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals")
residuals <- data.frame(q=1:499/100, CCA, Jacard_compounds, Jacard_location,
Jacard_reactions, Identity_matrix, Neg.bin.regression=rep(261, 499))
library(plyr)
Jacard_compounds <- calc_residuals(bacteria, q_jacard_compounds)
Jacard_reactions <- calc_residuals(bacteria, q_jacard_reactions)
Jacard_location <- calc_residuals(bacteria, q_jacard_location)
residuals <- data.frame(q=1:499/100, CCA, Jacard_compounds, Jacard_location,
Jacard_reactions, Identity_matrix, Neg.bin.regression=rep(261, 499))
Identity_matrix <- calc_residuals(bacteria, q_unity)
CCA <- calc_residuals(bacteria, q_CCA)
Jacard_compounds <- calc_residuals(bacteria, q_jacard_compounds)
Jacard_reactions <- calc_residuals(bacteria, q_jacard_reactions)
Jacard_location <- calc_residuals(bacteria, q_jacard_location)
residuals <- data.frame(q=1:499/100, CCA, Jacard_compounds, Jacard_location,
Jacard_reactions, Identity_matrix, Neg.bin.regression=rep(261, 499))
library(plyr)
library(ggplot2)
library(reshape2)
resid_melt <- melt(residuals, id.vars = 'q')
ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals")
ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals") +
guides(colour = guide_legend(override.aes = list(size=3)))
ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals") +
guides(colour = guide_legend(override.aes = list(size=4)))
p_residuals <- ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals") +
guides(colour = guide_legend(override.aes = list(size=4)))
ggsave(file="plot_q_residuals.pdf")
p_residuals <- ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals") +
guides(colour = guide_legend(override.aes = list(size=4))) + theme(text = element_text(size=20)
)
ggsave(file="plot_q_residuals.pdf")
ggsave(file="plot_q_residuals.jpeg")
p_residuals <- ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals") +
guides(colour = guide_legend(override.aes = list(size=4))) + theme(text = element_text(size=30) )
ggsave(file="plot_q_residuals.jpeg")
p_residuals <- ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals") +
guides(colour = guide_legend(override.aes = list(size=4))) + theme(text = element_text(size=25) )
ggsave(file="plot_q_residuals.jpeg")
Identity_matrix <- calc_residuals(bacteria, q_unity)
CCA <- calc_residuals(bacteria, q_CCA)
Jaccard_compounds <- calc_residuals(bacteria, q_jacard_compounds)
Jaccard_reactions <- calc_residuals(bacteria, q_jacard_reactions)
Jaccard_location <- calc_residuals(bacteria, q_jacard_location)
residuals <- data.frame(q=1:499/100, CCA, Jaccard_compounds, Jaccard_location,
Jaccard_reactions, Identity_matrix, Neg.bin.regression=rep(261, 499))
library(plyr)
library(ggplot2)
library(reshape2)
resid_melt <- melt(residuals, id.vars = 'q')
p_residuals <- ggplot(resid_melt, aes(x=q, y=value, group=variable, col=variable)) + geom_point() +
theme_grey(base_size = 20, base_family = "") + ylab("Residuals") +
guides(colour = guide_legend(override.aes = list(size=4))) + theme(text = element_text(size=25) )
ggsave(file="plot_q_residuals.jpeg")
